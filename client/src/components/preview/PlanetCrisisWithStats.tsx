import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { Button } from "@/components/ui/button";
import ThreeGlobe from './ThreeGlobe';

interface PlanetCrisisWithStatsProps {
  onSave: () => void;
}

export default function PlanetCrisisWithStats({ onSave }: PlanetCrisisWithStatsProps) {
  const [currentPlate, setCurrentPlate] = useState(0);
  const [showButton, setShowButton] = useState(false);
  const [redLevel, setRedLevel] = useState(0); // –£—Ä–æ–≤–µ–Ω—å "–ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏—è" –≥–ª–æ–±—É—Å–∞ (0-100%)
  
  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–ª–∏—Ç–æ–∫
  const plates = [
    [
      "71% –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ó–µ–º–ª–∏ ‚Äî –≤–æ–¥–∞",
      "0.02% –º–∞—Å—Å—ã –ø–ª–∞–Ω–µ—Ç—ã ‚Äî –≤–æ–¥–∞",
      "0.0006% ‚Äî –ø—Ä–∏–≥–æ–¥–Ω–∞—è –ø—Ä–µ—Å–Ω–∞—è",
      "0.0002% ‚Äî —Ä–µ–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–∞—è"
    ],
    [
      "1.2 –º–ª–Ω —Å–º–µ—Ä—Ç–µ–π –≤ –≥–æ–¥",
      "2.8 –º–ª–Ω –∫–º¬≥ –≤–æ–¥—ã —É–Ω–∏—á—Ç–æ–∂–µ–Ω–æ",
      "400 –º–ª–Ω —Ç–æ–Ω–Ω —Ç–æ–∫—Å–∏–Ω–æ–≤ –≤ –≥–æ–¥",
      "2.2 –º–ª—Ä–¥ —á–µ–ª–æ–≤–µ–∫ –±–µ–∑ —á–∏—Å—Ç–æ–π –≤–æ–¥—ã"
    ],
    [
      "25% –ø—Ä–µ—Å–Ω–æ–π –≤–æ–¥—ã —É—Ç—Ä–∞—á–µ–Ω—ã",
      "30% –Ω–∞—Å–µ–ª–µ–Ω–∏—è –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞",
      "65% –ø–∞—à–Ω–∏ –ø–æ–¥ —É–≥—Ä–æ–∑–æ–π",
      "80% —Å—Ç–æ—á–Ω—ã—Ö –≤–æ–¥ –±–µ–∑ –æ—á–∏—Å—Ç–∫–∏"
    ],
    [
      "2030 ‚Äî –≤–æ–¥–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã",
      "2040 ‚Äî –≥–ª–æ–±–∞–ª—å–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç",
      "2050 ‚Äî 70% —ç–∫–æ—Å–∏—Å—Ç–µ–º –≤ –∫—Ä–∏–∑–∏—Å–µ",
      "2060 ‚Äî —Ä–∏—Å–∫ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–ª–ª–∞–ø—Å–∞"
    ]
  ];
  
  // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –ø–ª–∏—Ç–æ–∫ –∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –∫—Ä–∞—Å–Ω–æ—Ç—ã
  useEffect(() => {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –ø–ª–∏—Ç–∫—É –∏ –Ω–∞—á–∏–Ω–∞–µ–º –ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏–µ
    const timer1 = setTimeout(() => {
      setCurrentPlate(1);
      setRedLevel(25); // 25% –ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏—è —Å –ø–µ—Ä–≤–æ–π –ø–ª–∏—Ç–∫–æ–π
    }, 2000);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ç–æ—Ä—É—é –ø–ª–∏—Ç–∫—É –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏–µ
    const timer2 = setTimeout(() => {
      setCurrentPlate(2);
      setRedLevel(50); // 50% –ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏—è —Å–æ –≤—Ç–æ—Ä–æ–π –ø–ª–∏—Ç–∫–æ–π
    }, 4000);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç—Ä–µ—Ç—å—é –ø–ª–∏—Ç–∫—É –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏–µ
    const timer3 = setTimeout(() => {
      setCurrentPlate(3);
      setRedLevel(75); // 75% –ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏—è —Å —Ç—Ä–µ—Ç—å–µ–π –ø–ª–∏—Ç–∫–æ–π
    }, 6000);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ—Ç–≤–µ—Ä—Ç—É—é –ø–ª–∏—Ç–∫—É –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏–µ
    const timer4 = setTimeout(() => {
      setCurrentPlate(4);
      setRedLevel(100); // 100% –ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏—è —Å —á–µ—Ç–≤–µ—Ä—Ç–æ–π –ø–ª–∏—Ç–∫–æ–π
    }, 8000);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–ª–∏—Ç–æ–∫
    const timerButton = setTimeout(() => {
      setShowButton(true);
    }, 9500);
    
    return () => {
      clearTimeout(timer1);
      clearTimeout(timer2);
      clearTimeout(timer3);
      clearTimeout(timer4);
      clearTimeout(timerButton);
    };
  }, []);
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –ø–ª–∏—Ç–æ–∫
  const plateVariants = {
    initial: { opacity: 0, y: -20 },
    animate: { 
      opacity: 1, 
      y: 0,
      transition: {
        duration: 0.8,
        ease: "easeOut"
      }
    }
  };
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏
  const buttonVariants = {
    initial: { opacity: 0, scale: 0.9 },
    animate: { 
      opacity: 1, 
      scale: 1,
      transition: {
        duration: 0.5,
        ease: "backOut"
      }
    }
  };
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–ø–∞—Å–µ–Ω–∏—è
  const handleSaveClick = () => {
    // –ê–Ω–∏–º–∏—Ä—É–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–µ—Ç—ã
    setRedLevel(0);
    
    // –ü–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫
    setTimeout(() => {
      onSave();
    }, 2000);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∏—Ç–∫–∏ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
  const renderStatPlate = (plateIndex: number, plateData: string[]) => {
    if (currentPlate >= plateIndex) {
      return (
        <motion.div
          className="bg-card/30 backdrop-blur-sm rounded-lg border border-primary/20 p-3"
          variants={plateVariants}
          initial="initial"
          animate="animate"
          key={`plate-${plateIndex}`}
        >
          <h3 className="text-sm md:text-base font-bold text-white mb-1">{
            plateIndex === 1 ? "–§–∞–∫—Ç—ã –æ –≤–æ–¥–µ –Ω–∞ –ó–µ–º–ª–µ" :
            plateIndex === 2 ? "–í–ª–∏—è–Ω–∏–µ –Ω–∞ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–æ" :
            plateIndex === 3 ? "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ" :
            "–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –±—É–¥—É—â–µ–µ"
          }</h3>
          <ul className="space-y-1">
            {plateData.map((item, index) => (
              <li key={index} className="text-white/80 flex items-start text-xs md:text-sm">
                <span className="text-primary mr-1">‚Ä¢</span>
                <span>{item}</span>
              </li>
            ))}
          </ul>
        </motion.div>
      );
    }
    return null;
  };

  return (
    <div className="min-h-screen w-full relative flex flex-col items-center justify-center pt-16 pb-6">
      {/* –§–æ–Ω–æ–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç */}
      <div className="absolute inset-0 bg-gradient-to-br from-primary/5 via-background to-background"></div>
      <div className="absolute inset-0 bg-[url('/hexagonal-grid.svg')] opacity-15"></div>
      
      <div className="relative z-10 w-full max-w-4xl p-4 flex flex-col items-center">
        {/* –í–µ—Ä—Ö–Ω–∏–π —Ä—è–¥ - –ø–µ—Ä–≤—ã–µ –¥–≤–µ –ø–ª–∏—Ç–∫–∏ */}
        <div className="grid grid-cols-2 gap-3 w-full mb-6">
          {renderStatPlate(1, plates[0])}
          {renderStatPlate(2, plates[1])}
        </div>
        
        {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç - 3D –≥–ª–æ–±—É—Å */}
        <div className="mb-6 transition-all duration-500" style={{ transform: showButton ? 'scale(0.9)' : 'scale(1)' }}>
          <ThreeGlobe redLevel={redLevel} size={220} />
        </div>
        
        {/* –ù–∏–∂–Ω–∏–π —Ä—è–¥ - –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–≤–µ –ø–ª–∏—Ç–∫–∏ */}
        <div className="grid grid-cols-2 gap-3 w-full mb-4">
          {renderStatPlate(3, plates[2])}
          {renderStatPlate(4, plates[3])}
        </div>
        
        {/* –ö–Ω–æ–ø–∫–∞ —Å–ø–∞—Å–µ–Ω–∏—è –ø–ª–∞–Ω–µ—Ç—ã */}
        {showButton && (
          <motion.div
            className="mt-2"
            variants={buttonVariants}
            initial="initial"
            animate="animate"
          >
            <Button 
              className="bg-primary hover:bg-primary/90 text-black font-medium px-6 py-4 text-base rounded-full"
              onClick={handleSaveClick}
            >
              –°–ø–∞—Å—Ç–∏ –ø–ª–∞–Ω–µ—Ç—É +50üíß
            </Button>
          </motion.div>
        )}
      </div>
    </div>
  );
}