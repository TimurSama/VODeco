import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import GlassPanel from '@/components/ui/GlassPanel';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Badge } from '@/components/ui/badge';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Progress } from '@/components/ui/progress';
import { Droplets, Users, Award, TrendingUp, MapPin, Calendar, CheckCircle, Clock, AlertCircle, Star, Trophy, Target, Activity, Heart, Zap } from 'lucide-react';

interface WaterReport {
  id: string;
  location: string;
  quality: 'excellent' | 'good' | 'fair' | 'poor';
  timestamp: string;
  status: 'pending' | 'verified' | 'rejected';
}

interface Achievement {
  id: string;
  name: string;
  description: string;
  icon: string;
  progress: number;
  maxProgress: number;
  isCompleted: boolean;
  reward: number;
}

interface DAOProposal {
  id: string;
  title: string;
  description: string;
  category: string;
  status: 'active' | 'closed' | 'passed' | 'rejected';
  votesFor: number;
  votesAgainst: number;
  endDate: string;
  hasVoted: boolean;
}

export default function CitizenCabinet() {
  const [activeTab, setActiveTab] = useState<'overview' | 'monitoring' | 'achievements' | 'dao' | 'profile'>('overview');

  // Mock data
  const waterReports: WaterReport[] = [
    {
      id: '1',
      location: '–†–µ–∫–∞ –ú–æ—Å–∫–≤–∞, –ø–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ',
      quality: 'good',
      timestamp: '2024-01-15T10:30:00Z',
      status: 'verified'
    },
    {
      id: '2',
      location: '–ü—Ä—É–¥ –≤ –°–æ–∫–æ–ª—å–Ω–∏–∫–∞—Ö',
      quality: 'excellent',
      timestamp: '2024-01-14T15:45:00Z',
      status: 'verified'
    },
    {
      id: '3',
      location: '–ö–∞–Ω–∞–ª –∏–º. –ú–æ—Å–∫–≤—ã',
      quality: 'fair',
      timestamp: '2024-01-13T09:20:00Z',
      status: 'pending'
    }
  ];

  const achievements: Achievement[] = [
    {
      id: '1',
      name: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏',
      description: '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –æ—Ç—á–µ—Ç –æ –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–¥—ã',
      icon: 'üåä',
      progress: 1,
      maxProgress: 1,
      isCompleted: true,
      reward: 50
    },
    {
      id: '2',
      name: '–ê–∫—Ç–∏–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä',
      description: '–û—Ç–ø—Ä–∞–≤—å—Ç–µ 10 –æ—Ç—á–µ—Ç–æ–≤ –æ –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–¥—ã',
      icon: 'üìä',
      progress: 3,
      maxProgress: 10,
      isCompleted: false,
      reward: 200
    },
    {
      id: '3',
      name: '–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –∞–∫—Ç–∏–≤–∏—Å—Ç',
      description: '–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ 5 –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è—Ö DAO',
      icon: 'üó≥Ô∏è',
      progress: 2,
      maxProgress: 5,
      isCompleted: false,
      reward: 300
    },
    {
      id: '4',
      name: '–≠–∫—Å–ø–µ—Ä—Ç –∫–∞—á–µ—Å—Ç–≤–∞',
      description: '–ü–æ–ª—É—á–∏—Ç–µ 20 –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –≤–∞—à–∏—Ö –æ—Ç—á–µ—Ç–æ–≤',
      icon: 'üèÜ',
      progress: 8,
      maxProgress: 20,
      isCompleted: false,
      reward: 500
    }
  ];

  const daoProposals: DAOProposal[] = [
    {
      id: '1',
      title: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞—Ç—á–∏–∫–æ–≤ –≤ –ø–∞—Ä–∫–µ –ì–æ—Ä—å–∫–æ–≥–æ',
      description: '–ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å 5 –Ω–æ–≤—ã—Ö –¥–∞—Ç—á–∏–∫–æ–≤ –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–¥—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞',
      category: '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
      status: 'active',
      votesFor: 156,
      votesAgainst: 23,
      endDate: '2024-01-25T23:59:59Z',
      hasVoted: false
    },
    {
      id: '2',
      title: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—á–∏—Å—Ç–∫–∏ –º–∞–ª—ã—Ö —Ä–µ–∫ –ú–æ—Å–∫–≤—ã',
      description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ –æ—á–∏—Å—Ç–∫–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –º–∞–ª—ã—Ö —Ä–µ–∫ –≤ —á–µ—Ä—Ç–µ –≥–æ—Ä–æ–¥–∞',
      category: '–≠–∫–æ–ª–æ–≥–∏—è',
      status: 'active',
      votesFor: 89,
      votesAgainst: 12,
      endDate: '2024-01-30T23:59:59Z',
      hasVoted: true
    },
    {
      id: '3',
      title: '–°–æ–∑–¥–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞',
      description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —É–¥–æ–±–Ω–æ–≥–æ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–¥—ã',
      category: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
      status: 'closed',
      votesFor: 234,
      votesAgainst: 45,
      endDate: '2024-01-10T23:59:59Z',
      hasVoted: false
    }
  ];

  const getQualityColor = (quality: string) => {
    switch (quality) {
      case 'excellent': return 'bg-green-100 text-green-800';
      case 'good': return 'bg-blue-100 text-blue-800';
      case 'fair': return 'bg-yellow-100 text-yellow-800';
      case 'poor': return 'bg-red-100 text-red-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const getQualityText = (quality: string) => {
    switch (quality) {
      case 'excellent': return '–û—Ç–ª–∏—á–Ω–æ–µ';
      case 'good': return '–•–æ—Ä–æ—à–µ–µ';
      case 'fair': return '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ';
      case 'poor': return '–ü–ª–æ—Ö–æ–µ';
      default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'verified': return <CheckCircle className="w-4 h-4 text-green-500" />;
      case 'pending': return <Clock className="w-4 h-4 text-yellow-500" />;
      case 'rejected': return <AlertCircle className="w-4 h-4 text-red-500" />;
      default: return <Clock className="w-4 h-4 text-gray-500" />;
    }
  };

  return (
    <div className="space-y-6">
      {/* Cabinet Header */}
      <GlassPanel variant="elevated" padding="lg" className="mb-6">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-2xl font-bold text-gray-900 dark:text-white">
              –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –∫–∞–±–∏–Ω–µ—Ç
            </h1>
            <p className="text-gray-600 dark:text-gray-400">
              –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–¥—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —ç–∫–æ—Å–∏—Å—Ç–µ–º–æ–π
            </p>
          </div>
          <div className="flex items-center space-x-4">
            <div className="text-center">
              <div className="text-2xl font-bold text-blue-600">1,250</div>
              <div className="text-sm text-gray-500">VOD —Ç–æ–∫–µ–Ω–æ–≤</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-green-600">15</div>
              <div className="text-sm text-gray-500">–î–æ—Å—Ç–∏–∂–µ–Ω–∏–π</div>
            </div>
          </div>
        </div>
      </GlassPanel>

      {/* Tab Navigation */}
      <GlassPanel variant="subtle" padding="md" className="mb-6">
        <nav className="-mb-px flex space-x-8">
          {[
            { id: 'overview', label: '–û–±–∑–æ—Ä', icon: Activity },
            { id: 'monitoring', label: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥', icon: Droplets },
            { id: 'achievements', label: '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è', icon: Award },
            { id: 'dao', label: 'DAO', icon: Users },
            { id: 'profile', label: '–ü—Ä–æ—Ñ–∏–ª—å', icon: Heart }
          ].map((tab) => {
            const Icon = tab.icon;
            return (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id as any)}
                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${
                  activeTab === tab.id
                    ? 'border-cyan-500 text-cyan-600'
                    : 'border-transparent text-gray-500 hover:text-cyan-700 hover:border-cyan-300'
                }`}
              >
                <Icon className="w-4 h-4" />
                <span>{tab.label}</span>
              </button>
            );
          })}
        </nav>
      </GlassPanel>

      {/* Tab Content */}
      <div className="space-y-6">
        {activeTab === 'overview' && (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <Card>
              <CardHeader className="pb-3">
                <CardTitle className="text-lg flex items-center space-x-2">
                  <Droplets className="w-5 h-5 text-blue-500" />
                  <span>–û—Ç—á–µ—Ç—ã –æ –≤–æ–¥–µ</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-3xl font-bold text-blue-600">23</div>
                <p className="text-sm text-gray-600 dark:text-gray-400">
                  –í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç—á–µ—Ç–æ–≤
                </p>
                <div className="mt-2 flex items-center text-sm text-green-600">
                  <TrendingUp className="w-4 h-4 mr-1" />
                  +5 –∑–∞ –Ω–µ–¥–µ–ª—é
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader className="pb-3">
                <CardTitle className="text-lg flex items-center space-x-2">
                  <Award className="w-5 h-5 text-yellow-500" />
                  <span>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-3xl font-bold text-yellow-600">4/12</div>
                <p className="text-sm text-gray-600 dark:text-gray-400">
                  –ü–æ–ª—É—á–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
                </p>
                <Progress value={33} className="mt-2" />
              </CardContent>
            </Card>

            <Card>
              <CardHeader className="pb-3">
                <CardTitle className="text-lg flex items-center space-x-2">
                  <Users className="w-5 h-5 text-green-500" />
                  <span>–£—á–∞—Å—Ç–∏–µ –≤ DAO</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-3xl font-bold text-green-600">8</div>
                <p className="text-sm text-gray-600 dark:text-gray-400">
                  –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π –∑–∞ –º–µ—Å—è—Ü
                </p>
                <div className="mt-2 flex items-center text-sm text-blue-600">
                  <Target className="w-4 h-4 mr-1" />
                  80% –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
                </div>
              </CardContent>
            </Card>

            {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç—á–µ—Ç—ã */}
            <Card className="md:col-span-2 lg:col-span-3">
              <CardHeader>
                <CardTitle>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç—á–µ—Ç—ã –æ –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–¥—ã</CardTitle>
                <CardDescription>
                  –í–∞—à–∏ –Ω–µ–¥–∞–≤–Ω–∏–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–¥—ã
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {waterReports.map((report) => (
                    <div key={report.id} className="flex items-center justify-between p-4 border rounded-lg">
                      <div className="flex items-center space-x-4">
                        <div className="flex items-center space-x-2">
                          {getStatusIcon(report.status)}
                          <div>
                            <div className="font-medium">{report.location}</div>
                            <div className="text-sm text-gray-500">
                              {new Date(report.timestamp).toLocaleDateString('ru-RU')}
                            </div>
                          </div>
                        </div>
                      </div>
                      <div className="flex items-center space-x-4">
                        <Badge className={getQualityColor(report.quality)}>
                          {getQualityText(report.quality)}
                        </Badge>
                        <Button variant="outline" size="sm">
                          –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                        </Button>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        {activeTab === 'monitoring' && (
          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Droplets className="w-5 h-5" />
                  –ù–æ–≤—ã–π –æ—Ç—á–µ—Ç –æ –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–¥—ã
                </CardTitle>
                <CardDescription>
                  –î–æ–±–∞–≤—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–¥—ã –≤ –≤–∞—à–µ–º —Ä–∞–π–æ–Ω–µ
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <Label htmlFor="location">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</Label>
                    <Input id="location" placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã" />
                  </div>
                  <div>
                    <Label htmlFor="quality">–ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–¥—ã</Label>
                    <Select>
                      <SelectTrigger>
                        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="excellent">–û—Ç–ª–∏—á–Ω–æ–µ</SelectItem>
                        <SelectItem value="good">–•–æ—Ä–æ—à–µ–µ</SelectItem>
                        <SelectItem value="fair">–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ</SelectItem>
                        <SelectItem value="poor">–ü–ª–æ—Ö–æ–µ</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>
                <div>
                  <Label htmlFor="notes">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏</Label>
                  <Textarea id="notes" placeholder="–û–ø–∏—à–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è..." />
                </div>
                <Button className="w-full">
                  <Droplets className="w-4 h-4 mr-2" />
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç
                </Button>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>–ò—Å—Ç–æ—Ä–∏—è –æ—Ç—á–µ—Ç–æ–≤</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {waterReports.map((report) => (
                    <div key={report.id} className="flex items-center justify-between p-4 border rounded-lg">
                      <div className="flex items-center space-x-4">
                        <MapPin className="w-4 h-4 text-gray-400" />
                        <div>
                          <div className="font-medium">{report.location}</div>
                          <div className="text-sm text-gray-500">
                            {new Date(report.timestamp).toLocaleString('ru-RU')}
                          </div>
                        </div>
                      </div>
                      <div className="flex items-center space-x-4">
                        <Badge className={getQualityColor(report.quality)}>
                          {getQualityText(report.quality)}
                        </Badge>
                        {getStatusIcon(report.status)}
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        {activeTab === 'achievements' && (
          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Trophy className="w-5 h-5" />
                  –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                </CardTitle>
                <CardDescription>
                  –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  {achievements.map((achievement) => (
                    <Card key={achievement.id} className={`${achievement.isCompleted ? 'ring-2 ring-green-500' : ''}`}>
                      <CardContent className="p-4">
                        <div className="flex items-center space-x-3">
                          <div className="text-2xl">{achievement.icon}</div>
                          <div className="flex-1">
                            <div className="font-medium">{achievement.name}</div>
                            <div className="text-sm text-gray-600 dark:text-gray-400">
                              {achievement.description}
                            </div>
                            <div className="mt-2">
                              <div className="flex justify-between text-sm mb-1">
                                <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                                <span>{achievement.progress}/{achievement.maxProgress}</span>
                              </div>
                              <Progress value={(achievement.progress / achievement.maxProgress) * 100} />
                            </div>
                            <div className="mt-2 flex items-center justify-between">
                              <div className="flex items-center text-sm text-yellow-600">
                                <Star className="w-4 h-4 mr-1" />
                                {achievement.reward} —Ç–æ–∫–µ–Ω–æ–≤
                              </div>
                              {achievement.isCompleted && (
                                <Badge className="bg-green-100 text-green-800">
                                  <CheckCircle className="w-3 h-3 mr-1" />
                                  –ü–æ–ª—É—á–µ–Ω–æ
                                </Badge>
                              )}
                            </div>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        {activeTab === 'dao' && (
          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Users className="w-5 h-5" />
                  –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è DAO
                </CardTitle>
                <CardDescription>
                  –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ä–µ—à–µ–Ω–∏–π —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-6">
                  {daoProposals.map((proposal) => (
                    <Card key={proposal.id}>
                      <CardContent className="p-6">
                        <div className="flex items-start justify-between">
                          <div className="flex-1">
                            <div className="flex items-center space-x-2 mb-2">
                              <h3 className="font-medium">{proposal.title}</h3>
                              <Badge variant={proposal.status === 'active' ? 'default' : 'secondary'}>
                                {proposal.status === 'active' ? '–ê–∫—Ç–∏–≤–Ω–æ' : '–ó–∞–∫—Ä—ã—Ç–æ'}
                              </Badge>
                            </div>
                            <p className="text-sm text-gray-600 dark:text-gray-400 mb-4">
                              {proposal.description}
                            </p>
                            <div className="flex items-center space-x-4 text-sm text-gray-500">
                              <span>–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {proposal.category}</span>
                              <span>–î–æ: {new Date(proposal.endDate).toLocaleDateString('ru-RU')}</span>
                            </div>
                          </div>
                        </div>
                        
                        <div className="mt-4">
                          <div className="flex justify-between text-sm mb-2">
                            <span>–ì–æ–ª–æ—Å–∞ –∑–∞: {proposal.votesFor}</span>
                            <span>–ì–æ–ª–æ—Å–∞ –ø—Ä–æ—Ç–∏–≤: {proposal.votesAgainst}</span>
                          </div>
                          <div className="flex space-x-2">
                            <div className="flex-1 bg-green-100 rounded h-2">
                              <div 
                                className="bg-green-500 h-2 rounded" 
                                style={{ width: `${(proposal.votesFor / (proposal.votesFor + proposal.votesAgainst)) * 100}%` }}
                              />
                            </div>
                            <div className="flex-1 bg-red-100 rounded h-2">
                              <div 
                                className="bg-red-500 h-2 rounded" 
                                style={{ width: `${(proposal.votesAgainst / (proposal.votesFor + proposal.votesAgainst)) * 100}%` }}
                              />
                            </div>
                          </div>
                        </div>

                        {proposal.status === 'active' && !proposal.hasVoted && (
                          <div className="mt-4 flex space-x-2">
                            <Button size="sm" className="flex-1 bg-green-600 hover:bg-green-700">
                              <CheckCircle className="w-4 h-4 mr-1" />
                              –ì–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞
                            </Button>
                            <Button size="sm" variant="destructive" className="flex-1">
                              <AlertCircle className="w-4 h-4 mr-1" />
                              –ì–æ–ª–æ—Å–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–∏–≤
                            </Button>
                          </div>
                        )}

                        {proposal.hasVoted && (
                          <div className="mt-4">
                            <Badge className="bg-blue-100 text-blue-800">
                              <CheckCircle className="w-3 h-3 mr-1" />
                              –í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏
                            </Badge>
                          </div>
                        )}
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        {activeTab === 'profile' && (
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Heart className="w-5 h-5" />
                  –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <Label htmlFor="name">–ò–º—è</Label>
                  <Input id="name" defaultValue="–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤" />
                </div>
                <div>
                  <Label htmlFor="email">Email</Label>
                  <Input id="email" defaultValue="alex@example.com" />
                </div>
                <div>
                  <Label htmlFor="location">–ì–æ—Ä–æ–¥</Label>
                  <Input id="location" defaultValue="–ú–æ—Å–∫–≤–∞" />
                </div>
                <Button className="w-full">
                  <Zap className="w-4 h-4 mr-2" />
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                </Button>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex justify-between">
                  <span>–î–Ω–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ</span>
                  <span className="font-medium">45</span>
                </div>
                <div className="flex justify-between">
                  <span>–û—Ç—á–µ—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</span>
                  <span className="font-medium">23</span>
                </div>
                <div className="flex justify-between">
                  <span>–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π –≤ DAO</span>
                  <span className="font-medium">8</span>
                </div>
                <div className="flex justify-between">
                  <span>–î–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—É—á–µ–Ω–æ</span>
                  <span className="font-medium">4</span>
                </div>
                <div className="flex justify-between">
                  <span>–¢–æ–∫–µ–Ω–æ–≤ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ</span>
                  <span className="font-medium text-green-600">1,250</span>
                </div>
              </CardContent>
            </Card>
          </div>
        )}
      </div>
    </div>
  );
}

